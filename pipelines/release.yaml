---

trigger: none

pr: none

resources:
  pipelines:
    - pipeline: buildPipeline
      source: "GoFit - Build"
      trigger:
        tags:
          - release

pool:
  vmImage: Ubuntu-latest

variables:
  - template: templates/variables/global_vars.yaml
  - name: downloadArtifactsFrom
    value: buildPipeline

jobs:

  # Tag job is only executed when a tag is pushed to the repository.
  - ${{ if and( eq(variables['Build.Reason'], 'ResourceTrigger'), startsWith(variables['Build.SourceBranch'], 'refs/tags/') ) }}:
      - job: Tag
        displayName: Tag pipeline build
        steps:
          - checkout: none
          - script: |
              echo "##vso[build.addbuildtag]demo"
            displayName: Add pipeline build tag 'demo'

  - job:
    displayName: Release container image
    steps:
      - template: templates/steps/load-image-from-pipeline-artifacts.yaml
        parameters:
          image: $(global_imageName)
          downloadArtifactFrom: ${{ variables.downloadArtifactsFrom }}

      - task: Docker@2
        displayName: Login to ghcr.io
        inputs:
          containerRegistry: github
          command: login

      - script: make image/push
        displayName: Push to registry
        env:
          FULL_IMAGE_NAME: $(fullImageNameAndTag)   ## Defined in load-image-from-pipeline-artifacts.yaml

  # - job:
  #   displayName: Release image as latest tag
  #   steps:
  #     - template: templates/steps/load-image-from-pipeline-artifacts.yaml
  #       parameters:
  #         artifact: $(global_imageArtifactName)
  #         downloadArtifactFrom: ${{ variables.downloadArtifactsFrom }}

  #     - task: Docker@2
  #       displayName: Login to Docker Hub
  #       inputs:
  #         containerRegistry: dockerhub
  #         command: login

  #     - script: make image/tag
  #       displayName: Tag image to latest
  #       env:
  #         OLD_TAG: $(imageTag)
  #         NEW_TAG: latest

  #     - script: make image/push
  #       displayName: Push image with latest tag
  #       env:
  #         IMAGE_TAG: latest

  - job:
    displayName: Release Helm chart
    steps:

      - checkout: self
        persistCredentials: true
        fetchTags: true
        fetchDepth: 0

      - script: |
          git config --global user.name "$(global_gitConfigPipelineName)"
          git config --global user.email "$(global_gitConfigPipelineName)"
        displayName: Set Git config

      - template: templates/steps/load-chart-from-pipeline-artifacts.yaml
        parameters:
          chartName: $(global_chartName)
          downloadArtifactFrom: ${{ variables.downloadArtifactsFrom }}

      - script: |
          mkdir -p $(Build.SourcesDirectory)/charts
          mv $(chartPath) $(Build.SourcesDirectory)/charts
        displayName: Move Helm chart from artifacts directory to charts directory

      - script: make helm/release
        displayName: Create GitHub release with Helm chart
        env:
          GITHUB_TOKEN: $(GITHUB_TOKEN)
          GIT_REPO_OWNER: bamaas
          GIT_REPO_NAME: GoFit

      - script: make helm/index
        displayName: Create Helm index.yaml file for GitHub pages
        env:
          GITHUB_TOKEN: $(GITHUB_TOKEN)
          GIT_REPO_OWNER: bamaas
          GIT_REPO_NAME: GoFit

      - script: |
          git checkout gh-pages
          git add .
          git commit -m "Release GoFit Helm chart."
          git push origin HEAD:gh-pages
        displayName: Push Helm index and chart to GitHub pages
