---

trigger:
  branches:
    exclude:
      - master
  tags:
    include:
      - "*.*.*"

pool:
  vmImage: ubuntu-latest

# container: docker.io/bamaas/devcontainer:2f03e7ccfb73871b7deb353e63081b806e79de94

variables:
  - template: templates/variables/global_vars.yaml

stages:

  # Tag stage is only executed when a tag is pushed to the repository.
  - ${{ if and( eq(variables['Build.Reason'], 'IndividualCI'), startsWith(variables['Build.SourceBranch'], 'refs/tags/') ) }}:
      - stage: Tag
        displayName: Tag
        dependsOn: []
        condition: or( eq(variables.buildRequestedForPipeline, 'false'), startsWith(variables['Build.SourceBranch'], 'refs/tags/') )
        jobs:
          - job: Tag
            displayName: Tag pipeline build
            steps:
              - script: |
                  echo "##vso[build.addbuildtag]release"
                displayName: Add pipeline build tag 'release'

  - stage: Lint
    displayName: Lint
    dependsOn: []
    jobs:
      - job: LintHelm
        displayName: Lint Helm chart
        steps:
          - script: make lint/helm
            displayName: Lint Helm chart

      - job: LintDockerfiles
        displayName: Lint Dockerfiles
        steps:
          - script: make lint/dockerfiles
            displayName: Run Dockerfile linter

      - job: LintMarkdown
        displayName: Lint Markdown files
        steps:
          - script: make lint/markdown
            displayName: Lint Markdown files

      # - job: LintGoLang
      #   displayName: Lint Go files
      #   steps:
      #     - script: make lint/go
      #       displayName: Lint Go files

      - job: LintYaml
        displayName: Lint Yaml
        steps:

          - script: make install/yamllint
            displayName: Install yamllint

          - script: make lint/yaml
            displayName: Run yamllint

  - stage: Build
    displayName: Build
    dependsOn: []
    jobs:
      - job:
        displayName: Image
        steps:

          - task: Docker@2
            displayName: Login to DockerHub
            inputs:
              command: login
              containerRegistry: dockerhub

          - template: templates/steps/bump-version.yaml

          - script: make image/build
            displayName: Build image

          - script: make image/save
            displayName: Save image to .tar file

          - script: make image/save/compress
            displayName: Compress saved image .tar to .tar.gz

          - task: CopyFiles@2
            displayName: 'Copy image to artifact staging directory'
            inputs:
              contents: '.artifacts/**'
              targetFolder: '$(Build.ArtifactStagingDirectory)'
              flattenFolders: true

          - publish: '$(Build.ArtifactStagingDirectory)'
            displayName: Publish image as pipeline artifact
            artifact: $(global_imageArtifactName)

      - job:
        displayName: Chart
        steps:

          - template: templates/steps/bump-version.yaml

          - script: make helm/package
            displayName: Package Helm chart
            env:
              ARTIFACTS_ROOT_DIR: .artifacts

          - task: CopyFiles@2
            displayName: 'Copy Helm chart to artifact staging directory'
            inputs:
              contents: '.artifacts/**'
              targetFolder: '$(Build.ArtifactStagingDirectory)'
              flattenFolders: true

          - publish: '$(Build.ArtifactStagingDirectory)'
            displayName: Publish Helm chart as pipeline artifact
            artifact: $(global_chartArtifactName)
